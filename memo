<!DOCTYPE html>
<html lang="ja">
<head>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.11"></script>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="app">
        <header>
            <input type="text" id="access_token" v-model="loginID" :disabled="success">
            <button id="login" @click="login" :disabled="check">LOGIN</button>
        </header>
        <div id="list" v-show="showlist">
            <memolist></memolist>
            <memolist><div slot="memo-header">買い物</div></memolist>
            <button id="newMemo" @click="addMemo">NEW</button>
        </div>
    </div>
    <script src="index.js"></script>
</body>
</html>






Vue.component('memolist',{
    template:`
    <div class="memolist">
        <div class="memo-header" @click="toggle">
        <slot name="memo-header">ToDo</slot>
        <i class="fa fa-2x fa-angle-down header-icon" :class="{rotate:show}"></i>
        </div>
        <transition
        @before-enter="onBeforeEnter" @enter="onEnter"
        @before-leave="onBeforeLeave" @leave="onLeave" >
        <div class="body" v-show="show">
            <div class="body-inner" @click="toggle">
                <slot name="header">Pay My Task</slot>
            </div>
        </div>
        </transition>
    </div>`,

    data:function(){
        return{
            show:false,
        }
    },
    methods:{
        toggle:function(){
            this.show=!this.show;
        },
        onBeforeEnter:function(e){
            e.style.height=0;
        },
        onEnter:function(e){
            e.style.height=e.scrollHeight+'px'
        },
        onBeforeLeave:function(e){
            e.style.height=e.scrollHeight+'px'
        },
        onLeave:function(e){
            e.style.height=0
        },
    }
})


new Vue({
    el:"#app",
    data:{
      pass:'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx',
      loginID:'',
      disabled:true,
      showlist:false,
      success:false
    },
    created:function(){
      this.pass=
      this.pass.split('')
      .map(c => {
        switch (c) {
          case 'x': return (Math.random() * 16 | 0).toString(16);
          case 'y': return ((Math.random() * 4 | 0) + 8).toString(16);
          default: return c;
        }
      })
      .join('')
      console.log(this.pass)
      this.loginID=this.pass
   },
   computed:{
       check:function(){
           if(this.pass===this.loginID){
               return !this.disabled
           }
           return this.disabled
       }
   },
   methods:{
       login:function(){
           this.showlist=!this.showlist
           this.disabled=!this.disabled
           this.success=!this.success
       },
       addMemo:function(){
           
       }
   },

  })
  
  
  
  @import url('https://fonts.googleapis.com/css?family=Lato');

.memolist{
    max-width: 200px;
    font-family: Lato;
    border-radius :6px;
    position:relative;
    top:50px;
    border: 1px solid;
    border-radius: 6px;
}

.memolist .memo-header{
    height:40px;
    line-height: 40px;
    position:relative;
    cursor:pointer;
}



.memolist .header-icon{
    position:absolute;
    top:5px;
    right:8px;
    transform: rotate(0deg);
    transition-duration: 0.3s;
}

.memolist .body{
    overflow:hidden;
}

.memolist .body-inner{
    padding:8px;
    overflow-wrap:break-word;
    background-color: blue;
    cursor: pointer;
}

.memolist .header-icon.rotate{
    transform:rotate(180deg);
    transition-duration:0.3s;
}

#newMemo{
    position: relative;
    top:80px
}
/* header{
    background-color: blue;
} */

#access_token{
    border:none;
    border-bottom: 1px solid;
    width:200px;
}
  
